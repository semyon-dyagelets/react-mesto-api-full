{"ast":null,"code":"export var BASE_URL=\"https://auth.nomoreparties.co.\";var responseCheck=function responseCheck(response){return response.ok?response.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(response.status));};export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(responseCheck);};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(responseCheck);};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(responseCheck);};","map":{"version":3,"sources":["/Users/SD/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","responseCheck","response","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","checkToken","token"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAC,gCAAf,CAEP,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,CAAcD,QAAQ,CAACE,IAAT,EAAd,CAAgCC,OAAO,CAACC,MAAR,gDAAyBJ,QAAQ,CAACK,MAAlC,EAA9C,EAAtB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACzC,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAC/BY,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFsB,CAM/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CANyB,CAAvB,CAAL,CAQNO,IARM,CAQDhB,aARC,CAAP,CASH,CAVM,CAYP,MAAO,IAAMiB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACT,KAAD,CAAQC,QAAR,CAAqB,CAC1C,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAC/BY,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFsB,CAM/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CANyB,CAAvB,CAAL,CAQNO,IARM,CAQDhB,aARC,CAAP,CASH,CAVM,CAYP,MAAO,IAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACjC,MAAOT,CAAAA,KAAK,WAAIX,QAAJ,cAAyB,CACjCY,MAAM,CAAE,KADyB,CAEjCC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAGL,iCAA4BO,KAA5B,CAHK,CAFwB,CAAzB,CAAL,CAQNH,IARM,CAQDhB,aARC,CAAP,CASH,CAVM","sourcesContent":["export const BASE_URL=\"https://auth.nomoreparties.co.\"\n\nconst responseCheck = (response) => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: \"POST\",\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({email, password})\n    })\n    .then(responseCheck)\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: \"POST\",\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({email, password})\n    })\n    .then(responseCheck)\n}\n\nexport const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: \"GET\",\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : `Bearer ${token}`\n        },\n    })\n    .then(responseCheck)\n}"]},"metadata":{},"sourceType":"module"}