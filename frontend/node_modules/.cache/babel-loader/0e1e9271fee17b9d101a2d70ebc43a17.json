{"ast":null,"code":"import _classCallCheck from\"/Users/SD/Desktop/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/SD/Desktop/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var API=/*#__PURE__*/function(){function API(_ref){var baseURL=_ref.baseURL,token=_ref.token;_classCallCheck(this,API);this._baseURL=baseURL;this._token=token;}_createClass(API,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._baseURL,\"/users/me\"),{method:'GET',headers:{authorization:this._token}}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseURL,\"/cards\"),{method:'GET',headers:{authorization:this._token}}).then(this._checkResponse);}},{key:\"editProfile\",value:function editProfile(data){return fetch(\"\".concat(this._baseURL,\"/users/me\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:data.name,about:data.about})}).then(this._checkResponse);}},{key:\"editAvatar\",value:function editAvatar(data){return fetch(\"\".concat(this._baseURL,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({avatar:data.avatar})}).then(this._checkResponse);}},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._baseURL,\"/cards\"),{method:'POST',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:data.name,link:data.link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(_id){return fetch(\"\".concat(this._baseURL,\"/cards/\").concat(_id),{method:'DELETE',headers:{authorization:this._token}}).then(this._checkResponse);}},{key:\"putLike\",value:function putLike(_id){return fetch(\"\".concat(this._baseURL,\"/cards/likes/\").concat(_id),{method:'PUT',headers:{authorization:this._token}}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(_id){return fetch(\"\".concat(this._baseURL,\"/cards/likes/\").concat(_id),{method:'DELETE',headers:{authorization:this._token}}).then(this._checkResponse);}}]);return API;}();var api=new API({baseURL:'https://mesto.nomoreparties.co/v1/cohort-19',token:'368fbfa6-0e9c-41c7-bd15-303b5b8d6ef8'});export default api;","map":{"version":3,"sources":["/Users/SD/Desktop/dev/react-mesto-auth/src/utils/api.js"],"names":["API","baseURL","token","_baseURL","_token","res","ok","json","Promise","reject","status","fetch","method","headers","authorization","then","_checkResponse","data","body","JSON","stringify","name","about","avatar","link","_id","api"],"mappings":"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","sourcesContent":["class API {\n    constructor({ baseURL, token }) {\n        this._baseURL = baseURL;\n        this._token = token;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка ${res.status}`);\n    }\n\n    getUserInfo() {\n        return fetch(`${this._baseURL}/users/me`, {\n            method: 'GET',\n            headers: {\n                authorization: this._token\n            }\n        })\n            .then(this._checkResponse)\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseURL}/cards`, {\n            method: 'GET',\n            headers: {\n                authorization: this._token\n            }\n        })\n            .then(this._checkResponse)\n    }\n\n    editProfile(data) {\n        return fetch(`${this._baseURL}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n    editAvatar(data) {\n        return fetch(`${this._baseURL}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                avatar: data.avatar,\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n    addCard(data) {\n        return fetch(`${this._baseURL}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n    deleteCard(_id) {\n        return fetch(`${this._baseURL}/cards/${_id}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(this._checkResponse)\n    }\n\n    putLike(_id) {\n        return fetch(`${this._baseURL}/cards/likes/${_id}`, {\n            method: 'PUT',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(this._checkResponse)\n    }\n\n    deleteLike(_id) {\n        return fetch(`${this._baseURL}/cards/likes/${_id}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(this._checkResponse)\n    }\n}\n\nconst api = new API({\n    baseURL: 'https://mesto.nomoreparties.co/v1/cohort-19',\n    token: '368fbfa6-0e9c-41c7-bd15-303b5b8d6ef8',\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}