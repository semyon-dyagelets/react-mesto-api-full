{"ast":null,"code":"import _classCallCheck from\"/Users/SD/Desktop/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/SD/Desktop/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var API=/*#__PURE__*/function(){function API(_ref){var baseURL=_ref.baseURL;_classCallCheck(this,API);this._baseURL=baseURL;}_createClass(API,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._baseURL,\"/users/me\"),{method:'GET',headers:{authorization:\"Bearer \".concat(localStorage.getItem('token')),'Content-Type':'application/json'}}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseURL,\"/cards\"),{method:'GET',headers:{authorization:\"Bearer \".concat(localStorage.getItem('token')),'Content-Type':'application/json'}}).then(this._checkResponse);}},{key:\"editProfile\",value:function editProfile(data){return fetch(\"\".concat(this._baseURL,\"/users/me\"),{method:'PATCH',headers:{authorization:\"Bearer \".concat(localStorage.getItem('token')),'Content-Type':'application/json'},body:JSON.stringify({name:data.name,about:data.about})}).then(this._checkResponse);}},{key:\"editAvatar\",value:function editAvatar(data){return fetch(\"\".concat(this._baseURL,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:\"Bearer \".concat(localStorage.getItem('token')),'Content-Type':'application/json'},body:JSON.stringify({avatar:data.avatar})}).then(this._checkResponse);}},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._baseURL,\"/cards\"),{method:'POST',headers:{authorization:\"Bearer \".concat(localStorage.getItem('token')),'Content-Type':'application/json'},body:JSON.stringify({name:data.name,link:data.link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(_id){return fetch(\"\".concat(this._baseURL,\"/\").concat(_id),{method:'DELETE',headers:{authorization:\"Bearer \".concat(localStorage.getItem('token'))}}).then(this._checkResponse);}},{key:\"putLike\",value:function putLike(_id){return fetch(\"\".concat(this._baseURL,\"/cards/\").concat(_id,\"/likes/\"),{method:'PUT',headers:{authorization:\"Bearer \".concat(localStorage.getItem('token'))}}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(_id){return fetch(\"\".concat(this._baseURL,\"/cards/\").concat(_id,\"/likes\"),{method:'DELETE',headers:{authorization:\"Bearer \".concat(localStorage.getItem('token'))}}).then(this._checkResponse);}}]);return API;}();var api=new API({baseURL:'http://api.semyon-dyagelets.nomoredomains.club'});export default api;","map":{"version":3,"sources":["/Users/SD/Desktop/dev/react-mesto-auth/src/utils/api.js"],"names":["API","baseURL","_baseURL","res","ok","json","Promise","reject","status","fetch","method","headers","authorization","localStorage","getItem","then","_checkResponse","data","body","JSON","stringify","name","about","avatar","link","_id","api"],"mappings":"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","sourcesContent":["class API {\n    constructor({ baseURL }) {\n        this._baseURL = baseURL;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка ${res.status}`);\n    }\n\n    getUserInfo() {\n        return fetch(`${this._baseURL}/users/me`, {\n            method: 'GET',\n            headers: {\n                authorization: `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(this._checkResponse)\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseURL}/cards`, {\n            method: 'GET',\n            headers: {\n                authorization: `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(this._checkResponse)\n    }\n\n    editProfile(data) {\n        return fetch(`${this._baseURL}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n    editAvatar(data) {\n        return fetch(`${this._baseURL}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                avatar: data.avatar,\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n    addCard(data) {\n        return fetch(`${this._baseURL}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: `Bearer ${localStorage.getItem('token')}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n    deleteCard(_id) {\n        return fetch(`${this._baseURL}/${_id}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: `Bearer ${localStorage.getItem('token')}`,\n            }\n        })\n            .then(this._checkResponse)\n    }\n\n    putLike(_id) {\n        return fetch(`${this._baseURL}/cards/${_id}/likes/`, {\n            method: 'PUT',\n            headers: {\n                authorization: `Bearer ${localStorage.getItem('token')}`,\n            }\n        })\n            .then(this._checkResponse)\n    }\n\n    deleteLike(_id) {\n        return fetch(`${this._baseURL}/cards/${_id}/likes`, {\n            method: 'DELETE',\n            headers: {\n                authorization: `Bearer ${localStorage.getItem('token')}`,\n            }\n        })\n            .then(this._checkResponse)\n    }\n}\n\nconst api = new API({\n    baseURL: 'http://api.semyon-dyagelets.nomoredomains.club',\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}